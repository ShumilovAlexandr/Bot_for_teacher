from aiogram.types import (InlineKeyboardMarkup,
                           InlineKeyboardButton,
                           CallbackQuery,
                           Message)
from aiogram.dispatcher import FSMContext

from ..database.databases import session
from ..database.tables import Timesheet
from ..utils.states import CancelLesson
from ..loader import (dp,
                      bot)


### –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ—Ç–º–µ–Ω—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–∫–∞.
@dp.message_handler(text=["–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É—Ä–æ–∫ ‚ùå"])
async def select_lesson(message: Message, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è, –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ –≤—ã–≤–æ–¥ –¥–∞—Ç, –≤ –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Å—Ç–æ—è—â–∏–π
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª —Å–µ–±–µ —É—Ä–æ–∫–∏.
    """
    lesson = session\
        .query(Timesheet.record_date)\
        .filter(Timesheet.user_id == message.chat.id)\
        .distinct(Timesheet.record_date).all()

    markup = InlineKeyboardMarkup(row_width=1)

    # –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—ã–≤–æ–¥–∏–º—É—é –∏–∑ –ë–î –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    formatted_dates = [date[0].strftime('%Y-%m-%d') for date in lesson]
    if formatted_dates:
        for date in formatted_dates:
            markup.add(InlineKeyboardButton(text=date, callback_data=date))

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        await state.set_state(CancelLesson.date_lsn)
        await bot.send_message(message.chat.id, "–ñ–∞–ª—å –∫–æ–Ω–µ—á–Ω–æ \U0001F61E. "
                                                "–ù–∞–¥–µ—é—Å—å, –í—ã –ø—Ä–æ—Å—Ç–æ —Ä–µ—à–∏–ª–∏ "
                                                "–ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤—Ä–µ–º—è. –í—ã–±–µ—Ä–∏, –≤ –∫–∞–∫–æ–π –¥–µ–Ω—å "
                                                "–í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —É—Ä–æ–∫ "
                                                "\U0001F4C5",
                               reply_markup=markup)
    if not formatted_dates:
        await bot.send_message(message.chat.id, "–£ –í–∞—Å –Ω–µ—Ç –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö "
                                                "—É—Ä–æ–∫–æ–≤, –æ—Ç–º–µ–Ω—è—Ç—å –Ω–µ—á–µ–≥–æ!")
        await state.reset_state()


@dp.callback_query_handler(state=CancelLesson.date_lsn)
async def select_time(callback: CallbackQuery, state: FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è, –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ –≤—ã–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ –∫ –¥–∞—Ç–µ, –≤ –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Å—Ç–æ—è—â–∏–π
    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª —Å–µ–±–µ —É—Ä–æ–∫–∏.
    """
    await state.update_data(date_lsn=callback.data)
    time_lesson = session \
        .query(Timesheet.record_time) \
        .filter(Timesheet.record_date == callback.data) \
        .all()
    markup = InlineKeyboardMarkup(row_width=1)

    formatted_times = [time[0].strftime("%H:%M") for time in time_lesson]
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –Ω–∞ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞—Ç—ã.
    for time in formatted_times:
        buttons = InlineKeyboardButton(text=str(time),
                                       callback_data=f'{time}')
        markup.add(buttons)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    await state.set_state(CancelLesson.time_lsn)
    await callback.message.answer(text="–¢–µ–ø–µ—Ä—å, –≤—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è, "
                                       "–Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ —É –í–∞—Å –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω "
                                       "—É—Ä–æ–∫",
                                  reply_markup=markup)


@dp.callback_query_handler(state=CancelLesson.time_lsn)
async def select_time(callback: CallbackQuery, state: \
                      FSMContext):
    """
    –§—É–Ω–∫—Ü–∏—è, –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ —É—Ä–æ–∫–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
    """
    await state.update_data(time_lsn=callback.data)
    data = await state.get_data()
    date = data['date_lsn']
    time = data['time_lsn']
    await bot.send_message(callback.message.chat.id,
                           text=f"–ó–∞–ø–∏—Å—å {date} –Ω–∞"
                                f" {time} –æ—Ç–º–µ–Ω–µ–Ω–∞. –ë—É–¥—É —Ä–∞–¥–∞ "
                                f"–í–∞—Å –≤–∏–¥–µ—Ç—å —É –º–µ–Ω—è –Ω–∞ "
                                f"–∑–∞–Ω—è—Ç–∏–∏! –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—åüòçüòçüòç")
    session\
        .query(Timesheet) \
        .filter(Timesheet.record_date == date)\
        .filter(Timesheet.record_time == time)\
        .delete()
    session.commit()
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–º–µ–Ω—ã —É—Ä–æ–∫–∞.
    await state.reset_state()
